[1번 문제]
2016년 1월 1일은 금요일입니다. 2016년 a월 b일은 무슨 요일일까요? 두 수 a ,b를 입력받아 2016년 a월 b일이 무슨 요일인지 리턴하는 함수, solution을 완성하세요. 요일의 이름은 일요일부터 토요일까지 각각 SUN,MON,TUE,WED,THU,FRI,SAT

입니다. 예를 들어 a=5, b=24라면 5월 24일은 화요일이므로 문자열 "TUE"를 반환하세요.

>코드
function solution(a, b) {
    const week = ['SUN','MON','TUE','WED','THU','FRI','SAT'];
    const date = new Date(`2016-${a}-${b}`);
    // const date = new Date('2016-'+a+'-'+b)
    
    const answer = week[date.getDay()];
    return answer;
}

........................................................

[2번 문제]
array의 각 element 중 divisor로 나누어 떨어지는 값을 오름차순으로 정렬한 배열을 반환하는 함수, solution을 작성해주세요.
divisor로 나누어 떨어지는 element가 하나도 없다면 배열에 -1을 담아 반환하세요.

>코드
function solution(arr, divisor) {
    //결과값 배열
    var answer = [];
    //나누기
    for(let i=0;i<arr.length;i++){
        //나머지 도출
        const cal = arr[i]%divisor;
        //나머지가 0인 element만 결과 배열에 담기(결과값은 빈값 반환)
        if(cal == 0){
            answer.push(arr[i]);
        }
    }
    //삼항연산자로 결과 배열길이 비교하여 비어있다면 -1/ 있다면 오름차순 정렬 하여 결과 도출
    //sort()는 문자열로 비교하므로 숫자비교시 아래와 같이 처리해야함
    const result = answer.length == 0?[-1]:answer.sort(function(a,b){return a-b;})
    return result;
}

........................................................

[3번 문제]
길이가 n이고, "수박수박수박수...."와 같은 패턴을 유지하는 문자열을 리턴하는 함수, solution을 완성하세요. 예를들어 n이 4이면 "수박수박"을 리턴하고 3이라면 "수박수"를 리턴하면 됩니다.

>코드
function solution(n) {
    var answer = '';
    
    for (let i = 0; i < n; i++) {         
        answer += i % 2 === 0 ? "수":"박";  
                                    
    }
    return answer;
}
........................................................
[4번 문제]
수많은 마라톤 선수들이 마라톤에 참여하였습니다. 단 한 명의 선수를 제외하고는 모든 선수가 마라톤을 완주하였습니다.

마라톤에 참여한 선수들의 이름이 담긴 배열 participant와 완주한 선수들의 이름이 담긴 배열 completion이 주어질 때, 완주하지 못한 선수의 이름을 return 하도록 solution 함수를 작성해주세요.

>코드
function solution(participant, completion) {
    participant.sort();
    completion.sort();
    for(let i=0;i<participant.length;i++){
        if(participant[i]!==completion[i]){
            return participant[i];
        }
    }
}
........................................................
[5번 문제]
문자열 s는 한 개 이상의 단어로 구성되어 있습니다. 각 단어는 하나 이상의 공백문자로 구분되어 있습니다. 각 단어의 짝수번째 알파벳은 대문자로, 홀수번째 알파벳은 소문자로 바꾼 문자열을 리턴하는 함수, solution을 완성하세요.
>코드
function solution(s) {
    let text = s.split(' ');
    let num = s.length;
    let new_text=''
    let answer=[];
    
    text.map(item=>{
        for(let i=0;i<item.length;i++){
            new_text += i%2==0?item[i].toUpperCase():item[i].toLowerCase();
        }
        answer.push(new_text);
        new_text ='';
    });
   
    return answer.join(' ');
}
........................................................
[6번 문제]
자연수 N이 주어지면, N의 각 자릿수의 합을 구해서 return 하는 solution 함수를 만들어 주세요.
예를들어 N = 123이면 1 + 2 + 3 = 6을 return 하면 됩니다.

>코드
function solution(n)
{
    const change_str = String(n);  
    console.log(n[0]);
    var answer = 0;
    for(let i =0;i<change_str.length;i++){
        
        answer += parseInt(change_str.charAt(i));
    }
    // [실행] 버튼을 누르면 출력 값을 볼 수 있습니다.
    

     return answer;
}................................................
[7번 문제]
자연수 n을 뒤집어 각 자리 숫자를 원소로 가지는 배열 형태로 리턴해주세요. 예를들어 n이 12345이면 [5,4,3,2,1]을 리턴합니다.

>코드
function solution(n) {
    var answer = [];
    const num = n.toString().split("").sort((a,b)=>b-a).join("");
    for(let i=0;i<num.length;i++){
        let data = Number(num.charAt(i));
        answer.push(data);
    }
    return answer;
}
........................................................
[8번 문제]
함수 solution은 정수 n을 매개변수로 입력받습니다. n의 각 자릿수를 큰것부터 작은 순으로 정렬한 새로운 정수를 리턴해주세요. 예를들어 n이 118372면 873211을 리턴하면 됩니다.

>코드
function solution(n) {
    
    var answer = 0;
    answer = Number((n.toString().split("").sort((a,b)=>b-a).join("")));
    return answer;
}
........................................................
[9번 문제]
임의의 양의 정수 n에 대해, n이 어떤 양의 정수 x의 제곱인지 아닌지 판단하려 합니다.
n이 양의 정수 x의 제곱이라면 x+1의 제곱을 리턴하고, n이 양의 정수 x의 제곱이 아니라면 -1을 리턴하는 함수를 완성하세요.

>코드
function solution(n) {
    var answer = 0;
    //루트값 구하기
    let root = Math.sqrt(n);
    //정수,실수 판별
    answer= Number.isInteger(root)?(root+1) ** 2: -1

    return answer;
}
........................................................
[10번 문제]
정수를 저장한 배열, arr 에서 가장 작은 수를 제거한 배열을 리턴하는 함수, solution을 완성해주세요. 단, 리턴하려는 배열이 빈 배열인 경우엔 배열에 -1을 채워 리턴하세요. 예를들어 arr이 [4,3,2,1]인 경우는 [4,3,2]를 리턴 하고, [10]면 [-1]을 리턴 합니다.

>코드
function solution(arr) {
    
    const min_num = Math.min.apply(null,arr);    
    const answer = arr.length ==1?[-1]:arr.filter((element) => element !== min_num);
  
   
    return answer;
}
........................................................
#11.콜라츠 추측

function solution(num) {
    var answer = 0;
    let result =0;
    while(num != 1){
        answer ++;
        if(num%2 ==0){
            num = num/2;
        }else{
            num = (num*3)+1;
        }
    }
    if(answer >500){
        answer = -1;
    }
    return answer;
}
............................................
#12 하샤드 수
function solution(x) {
    var answer = true;
    let x_sum = x.toString().split('').map(Number).reduce((a,b)=>a+b,0);
    answer= x%x_sum==0?true:false;
   
    
    return answer;
}
...........................................
#13 3진법 뒤집기
function solution(n) {
    var answer = 0;
    let num_txt =n.toString(3).split('').reverse().join('');
    answer = parseInt(num_txt,3);
    return answer;
}
...........................................
#14
...........................................
#15 같은 숫자는 싫어
function solution(arr)
{
    var answer = [];
    let data;
    for(let i=0;i<arr.length;i++){
        if(arr[i] != arr[i+1]){
            answer.push(arr[i]);  
        }    
    } 
    return answer;
}
..............................................
#16 두 개 뽑아서 더하기
function solution(numbers) {
  const temp = []

for (let i = 0; i < numbers.length; i++) {
  for (let j = i + 1; j < numbers.length; j++) {
      temp.push(numbers[i] + numbers[j]) }
    } 
const answer = [...new Set(temp)] 
return answer.sort((a, b) => a - b)

}
.............................................
#17 로또순위
function solution(lottos, win_nums) {
    var answer = [];
    
    //맞은 갯수
    let result = lottos.filter(a=>win_nums.includes(a)).length;
    //0인 갯수
    const zeros = lottos.filter(a => a === 0).length;
    
    //최저 순위
    let min = 7-result >= 6 ? 6 : 7-result;
    //최고 순위
    let max = min-zeros < 1 ? 1 : min-zeros;
    
    answer = [max, min]

   
    return answer;
}
..............................................
#18 모의고사

function solution(answers) {
     var answer = [];
    //학생별 답안 패턴
    const student_1 = [1,2,3,4,5];
    const student_2 = [2,1,2,3,2,4,2,5];
    const student_3 = [3,3,1,1,2,2,4,4,5,5];
    
    let result = answers.filter((a,i)=>a===student_1[i%student_1.length]).length;
    let result2 = answers.filter((a,i)=>a===student_2[i%student_2.length]).length;
    let result3 = answers.filter((a,i)=>a===student_3[i%student_3.length]).length;
    let max = Math.max(result,result2,result3);
   console.log(max)
    if (result === max) {answer.push(1)};
    if (result2 === max) {answer.push(2)};
    if (result3 === max) {answer.push(3)};
   

    return answer;
}
.............................................
#19 문자열 정리
function solution(strings, n) {
    var answer = [];
   
    let data = strings.map((item)=>item.charAt(n));
    for(let i=0;i<strings.length;i++){
        strings[i] = data[i]+strings[i];
    }
    
    strings.sort();
    data.sort();
    for(let j=0;j<strings.length;j++){
        strings[j] = strings[j].replace(data[j],"");
    }
    
    answer = strings;
    return answer;
}
..............................................
#20 문자열 내림차순 배치하기
function solution(s) {
    var answer = '';
    answer= s.split('').sort().reverse().join("");
    return answer;
}
..............................................
#21 소수 만들기
function solution(nums) {
    var answer=0;
    let len = nums.length;
    let data=[];
    //배열 내 합 경우의 수 구하기기
    for(let i=0;i<len;i++){
        for(let j=i+1;j<len;j++){
            for(let k=j+1;k<len;k++){
                if(primaryNum(nums[i]+nums[j]+nums[k])){
                    answer +=1;
                };
            }
        }
    }

    return answer;
}
//소수 검사
function primaryNum(num){
    let divisor = 2;
         while(num>divisor){
             if(num%divisor ==0){
                 return false; // 나눠지면 소수아님
             }else{
                 divisor++;
             }
         }
        return true;
}
ver2)
function solution(nums) {
    var answer;
    let len = nums.length;
    let data=[];
    //배열 내 합 경우의 수 구후ㅏ기
    for(let i=0;i<len;i++){
        for(let j=i+1;j<len;j++){
            for(let k=j+1;k<len;k++){
                data.push(nums[i]+nums[j]+nums[k]);
            }
        }
    }
    //map으로 소수 검사 (item 은 2 이상 자기자신 이하로 나눠짐)
    //reduce로 배열내 중복 개수 구하기
    let result = data.map((item)=>{
         let divisor = 2;
         while(item>divisor){
             if(item%divisor ==0){
                 return false; // 나눠지면 소수아님
             }else{
                 divisor++;
             }
         }
        return true;
    }).reduce((accu,curr)=>{
       accu[curr] = (accu[curr] || 0)+1; 
       return accu;
    },{});


    answer=result['true']    
    
    return answer;
}
...............................................
#22 숫자 문자열과 영단어
function solution(s) {
    var answer = 0;
    let eng_num=['zero','one','two','three','four','five','six','seven','eight','nine'];
    let num = ['0','1','2','3','4','5','6','7','8','9'];

    let word='';
    let data= [];
    for(let i=0;i<s.length;i++){

        word += s[i];
        if(eng_num.includes(word) ==true || num.includes(word) ==true){
            let index=''
            if(eng_num.includes(word) ==true || num.includes(word) ==false){
                 index = eng_num.indexOf(word);
            }else{
                index = num.indexOf(word);
            }
            data.push(index);
            i+1;
            word='';
        }
    }
    answer = Number(data.join(""));

    return answer;
}

...............................................
#23 시저암호
function solution(s, n) {
    var answer = '';
    const grande = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    const small = grande.toLowerCase();
    
    let arr =s.split("").map((item)=>{
         if (item == ' ') {
             answer += ' ';
            return;
         }
        let type = grande.includes(item)?grande:small;
        let index = type.indexOf(item)+n;
        if(index >= (type.length)) index -= type.length;
        answer += type[index];

    });
   
    return answer;
}
..............................................
#24 신규아이디어 추천
function solution(new_id) {
   var answer = '';
   var st_1 = /[\{\}\[\]\/?,;:|\)*~`!^\+<>@\#$%&\\\=\(\'\"]/gi;
   var st_3 =  /\.{2,}/gi;
   var st_4 = /^[.]/gi;
   var st_5 = /[.]$/gi; 

    new_id = new_id.toLowerCase();
    new_id= new_id.replace(st_1,'');
    new_id = new_id.replace(st_3,'.');
    new_id = new_id.replace(st_4,'');
    new_id = new_id.replace(st_5,'');
   

    if(new_id.length == 0){
        new_id="a";
         
    }
    if(new_id.length >=16){
        new_id = new_id.slice(0,15).replace(st_5,"");
        
    }
    if(new_id.length<=2){
       let last_word;
       if(new_id.length == 1){
           last_word = new_id.slice(-1).repeat(2);   
       }else{
           last_word = new_id.slice(-1).repeat(1);
       }
        
        new_id=new_id+last_word;  
       
    }
    
    answer = new_id;
    
    return answer;
}