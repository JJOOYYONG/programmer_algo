#1 2016년

function solution(a, b) {
    const day = new Date(`${a} ${b}, 2016`);
    const day_text = 'SUN,MON,TUE,WED,THU,FRI,SAT';
    const day_list = day_text.split(',');
    return day_list[day.getDay()]
}
---------------------------------------------------------------
#2 나누어 떨어지는 숫자 배열

function solution(arr, divisor) {
    let answer = [ ];
    arr.forEach((item) => {
        if((item / divisor != 0) && (item % divisor == 0) ){
             answer.push(item)
        }
    })
    answer = (answer.length == 0) ? [-1] : answer 
    return answer.sort((a, b) => a - b);
}
---------------------------------------------------------------
#3 수박수박수박수박수박수?

function solution(n) {
    var answer = '';
    if (n == 1){
        answer = '수'
    } else if (n%2 == 1 && n > 1){
        answer = '수박'.repeat(n/2) + '수'
    } else {
        answer = '수박'.repeat(n/2)
    }
    return answer;
}
---------------------------------------------------------------
#4 완주하지 못한 선수

function solution(par, com) {
    let answer = '';
    par.sort();
    com.sort();
    console.log(par)
    for(let i = 0; i < par.length; i++){
        if(par[i] !== com[i]){
            answer = par[i]
            return answer
        }
    }
    }
---------------------------------------------------------------
#5 이상한 문자 만들기
function solution(s) {
  return s
    .split(" ")
    .map((word) =>
      word
        .split("")
        .map((char, index) =>
          index % 2 === 0
            ? word[index].toUpperCase()
            : word[index].toLowerCase()
        )
        .join("")
    )
    .join(" ");
}
---------------------------------------------------------------
#6 자릿수 더하기

function solution(n)
{
    let answer = n.toString().split('').map(Number).reduce( (a,b) => a + b, 0)
    return answer;
}
---------------------------------------------------------------
#7 자연수 뒤집기

function solution(n) {
    var answer = n.toString().split('').reverse().map(Number);
    
    return answer;
}

---------------------------------------------------------------
#8 정수 내림차순으로 배치하기

function solution(n) {
    var align = n.toString().split('').sort().reverse().join('');
    let answer = parseInt(align)
    return answer;
}
---------------------------------------------------------------
#9 정수 제곱근 판별

function solution(n) {
    var answer = Number.isInteger(Math.sqrt(n))  ? (Math.sqrt(n) + 1) ** 2 : -1
    return answer;
}
---------------------------------------------------------------
#10 제일 작은 수 제거하기

function solution(arr) {
    arr.length != 1 ? arr.splice(arr.indexOf(Math.min(...arr)), 1) : arr = [-1] 
    return arr;
}
---------------------------------------------------------------
#11 콜라츠 추측

function solution(num) {
    let max_count = 500;
    for (let i = 0; i<max_count ; i++){
        if(num !== 1){
            num = num % 2 === 0 ? num/2 : ((num*3) + 1)
        } else {
            return i;
        }
    }
    let answer = num === 1 ? i : -1;
    return answer
}
---------------------------------------------------------------
#12 하샤드 수

function solution(x) {
    let sum = String(x).split('').map(Number).reduce((a,b) => a + b, 0)
    let answer = x % sum == 0 ? true : false
    //                       x % sum == 0 
    return answer;
}
---------------------------------------------------------------
#13 3진법 뒤집기

function solution(n) {
    let answer = parseInt(n.toString(3).split('').reverse().join(''), 3)
    return answer;
}
---------------------------------------------------------------
#14 최소 직사각형

function solution(sizes) {
    let row_length = [];
    let column_length = [];
    sizes.forEach((item) => {
        row_length.push(item.sort((a,b) => a - b)[0]);
        column_length.push(item.sort((a,b) => a - b)[1]);
    })
    let answer = Math.max(...row_length) * Math.max(...column_length)
    return answer;
}
---------------------------------------------------------------
#15 같은 숫자는 싫어 

function solution(arr){
    let answer =[];
    answer = arr.filter((value, index) => value !== arr[index + 1])
    return answer
}


---------------------------------------------------------------
#16 두 개 뽑아서 더하기

function solution(numbers) {
    let answer = [];
    for (let i = 0; i<numbers.length; i++){
        for(let j = 0; j<numbers.length; j++){
            if(i !== j){
                answer.push(numbers[i] + numbers[j])
            }
        }        
    }
    let result1 = new Set(answer)
    let result = [...result1]
    return result.sort((a,b) => a-b);
}

Array.from(obj) -> array로 바꿔줌 !
---------------------------------------------------------------
#17 로또의 최고순위와 최저순위

function solution(lottos, win_nums) {
    var answer = [];
    let result1 = [];
    let result2 = [];
    // 0과 mnum을 포함하는 배열 = result1
    lottos.forEach((mnum) => {
        if((win_nums.includes(mnum)) || (mnum == 0)){
            result1.push(mnum)
        }
    });
    // result1에서 0의 개수를 뺀 배열 result2
    result2 = result1.filter(n => n != 0);
    result1 = result1.length == 0 ? 1 : result1.length;
    result2 = result2.length == 0 ? 1 : result2.length;
    answer = [7 - result1, 7 -result2];
    
    return answer;
}
---------------------------------------------------------------
#18 모의고사

function solution(answers) {
    let answer = [];
    let fgm1 = [1, 2, 3, 4, 5].join('').repeat(Math.ceil(answers.length/5))
    let fgm2 = [2, 1, 2, 3, 2, 4, 2, 5].join('').repeat(Math.ceil(answers.length/8))
    let fgm3 = [3, 3, 1, 1, 2, 2, 4, 4, 5, 5].join('').repeat(Math.ceil(answers.length/10))
    let math1 = 0;
    let math2 = 0;
    let math3 = 0;
    for (let i =0; i< answers.length; i++){
        if(fgm1[i] == answers[i]){math1++}
        if(fgm2[i] == answers[i]){math2++}
        if(fgm3[i] == answers[i]){math3++}
        }
    let scoreBox = [math1, math2, math3];
    let max = Math.max(...scoreBox)

    if(max == math1){answer.push(1)}
    if(max == math2){answer.push(2)}
    if(max == math3){answer.push(3)}

    return answer

    }
---------------------------------------------------------------
#18 모의고사

function solution(strings, n) {
    let answer = strings.map((value) => value[n]).sort()
    // ["a","e","u"]
    let result = [];
    result = answer.map((s) => strings.filter((word) => s == word[n])).map((arr) => arr.sort()).flat()
    // [["car"],["bed"],["sun"]], [["abce","abcd"],["abce","abcd"],["cdx"]]
    // 이중 배열 안에 있는 배열을 정렬하기 위해 sort 한 후 flat
    answer = [...new Set(result)]
    return answer
}
---------------------------------------------------------------
#19 문자열 내림차순으로 배치하기

function solution(s) {
    let answer = s.split('').sort().reverse().join('')
    return answer;
}

---------------------------------------------------------------
#20 문자열 내림차순으로 배치하기

function solution(s) {
    let answer = s.split('').sort().reverse().join('')
    return answer;
}

---------------------------------------------------------------
#21 소수만들기(다시)

---------------------------------------------------------------
#22 숫자 문자열과 영단어

function solution(s) {
    let word = ['zero','one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']
    for(let i = 0; i < word.length; i++){
        if(s.indexOf(word[i]) !== -1){
            s = s.split(word[i]).join(i)
        }
    }
    return Number(s)
}

---------------------------------------------------------------
#23 시저암호

function solution(s, n) {
    let answer = [];
    for(let i =0; i< s.length; i++){
            let asc = s.charCodeAt(i);
            let nasc = s.charCodeAt(i) + n;
            if(asc < 91 && nasc > 90){
                while(nasc > 90){
                    nasc -= 26
                }
            } else if (asc > 96 && nasc > 122){
                while(nasc > 122){
                    nasc -= 26
                }
            } else if (asc == 32){
                nasc = ' ';
            }
            answer.push(nasc)
        }
            return answer.map((value) => value == ' ' ? ' ' : String.fromCharCode(value)).join('')
        }

---------------------------------------------------------------
#24 신규아이디 생성

function solution(new_id) {
    var answer = new_id.toLowerCase().replace(/[^a-z0-9._-]/g,'').replace(/\.+/g, '.').replace(/^\.|\.$/g, '').replace(/^$/, 'a').slice(0,15).replace(/\.$/g, '')
    if(answer.length == 1){answer = answer.repeat(3)};
    if(answer.length == 2){answer = answer+answer[answer.length-1]};
    return answer;
}

---------------------------------------------------------------
#25 약수의 개수와 덧셈
function solution(left, right) {
    var answer = 0;
    for(let i = 0; i < right-left+1; i++){
        let num = left + i
        Math.sqrt(num) % 1 !== 0 ? answer += num : answer -= num
    }
    return answer;
}
---------------------------------------------------------------
#26 약수의 합

function solution(n) {
    let answer = 0;
    let d_list = [];
    for(let i = 0; i <= n ; i++){
        if(n % i == 0){
           d_list.push(i) 
        }
    }
    answer = d_list.reduce((a,b) => a + b, 0)
    return answer;
}
---------------------------------------------------------------
#27 예산

function solution(d, budget) {
    d.sort((a,b) => a - b);
    for(let i = 0; i<=d.length; i++){
        if(budget >= d[i]){
            budget -= d[i];
        } else {
            return i;
        }
    }
}

---------------------------------------------------------------
#28 최대공약수와 최소공배수

function solution(n, m) {
    var answer = [];
    let gcd = 1;
    let lcm = 1;
    for(let i = 2; i<=Math.min(n,m); i++){
        if(n % i == 0 && m % i == 0){
            gcd = i
        }
    }
    while(true){
        if(lcm % 3 == 0 && lcm % 12 == 0){
            break;
            }
        lcm++;
        }
    answer = [gcd, lcm]
    return answer;
}

---------------------------------------------------------------
#29 k번째 수
function solution(array, commands) {
    let answer = [];
    let result = [];
    for(let i = 0; i < commands.length; i++){
        answer.push(array.slice(commands[i][0]-1, commands[i][1]).sort((a,b) => a - b))
    }
    for(let i = 0; i < commands.length; i++){
        result.push(answer[i].filter((value,index) => index == commands[i][2] - 1))
    }
    return result.flat()
    // .filter((value) => answer.indexOf(value) == commands[i][2] - 1)
}

---------------------------------------------------------------
#30 나머지가 1이 되는 수 찾기
function solution(n) {
    var answer = 0;
    let x = n-1
    let d_list = [];
    for(let i = 2; i <= x; i++){
        if(Number.isInteger(x/i)){
            while(x % i == 0){
                x /= i;
                d_list.push(i)
            }
        }
    }
    console.log(d_list)
    answer = n % 2 == 0 ? d_list.sort((a,b) => a-b)[0] : 2
    return answer;
}
---------------------------------------------------------------
#31 소수 찾기
function solution(n) {
    let answer = 0;
    let list = [];
    for(let i = 0; i <=n ; i++){
        list.push(true)
    }
    for(let i = 2; i*i <=n; i++){
        if(list[i]){
            for(let j = i * i; j <= n; j += i){
                list[j] = false;
            }
        }
    }
    answer = list.filter((value) => value == true).length - 2
    return answer;
}

---------------------------------------------------------------
#32 실패율
function solution(N, stages) {
    let reach = [];
    let fail = [];
    let answer = [];
    let rank = [];
    for(let i = 1; i <= N; i++){
        reach.push(stages.filter((value) => value >= i).length)
        fail.push(stages.filter((value) => value === i).length)
        rank.push(i)
    }
    let rate = fail.map((value,index) => value / reach[index])
    for (let i = 0; i <N; i++){
        answer[i] = [rank[i], rate[i]]
    }
    console.log(answer)
    return  answer.sort((a,b) => b[1]-a[1]).map((value) => value[0])

    // console.log(rank)
    
    //단계에 남은 사람
    // console.log(fail)
    //단계별 도달한 사람
    // console.log(reach)
}

---------------------------------------------------------------
#33 체육복

---------------------------------------------------------------
#34 폰켓몬
function solution(nums) {
    let answer = [...new Set(nums)].length < (nums.length/2) ?  [...new Set(nums)].length : nums.length/2
    return answer;
}
---------------------------------------------------------------
#35 비밀 지도
function solution(n, arr1, arr2) {
    let answer = [[]];
    arr1 = arr1.map((num) => num.toString(2).split(''))
    for(let i = 0; i < n; i++){
            while(arr1[i].length < n){
                arr1[i].unshift('0')
            }
    }
    arr2 = arr2.map((num) => num.toString(2).split(''))
    for(let i = 0; i < n; i++){
            while(arr2[i].length < n){
                arr2[i].unshift('0')
            }
    }
    
    for(let i = 0; i < n; i++){
        for(let j = 0; j < n; j++){
            arr1[i][j] = (arr1[i][j] == 0 && arr2[i][j] == 0) ? arr1[i][j] = ' ' : '#'
        }
        answer[i] = arr1[i].join('')
    }
    return answer;
}
---------------------------------------------------------------
#36 키패드 누르기
function solution(numbers, hand) {
    var answer = '';
    let key = [['*', 0, '#'], [7, 8, 9],[4, 5, 6], [1, 2, 3]]
    let coordinate = [];
    let current_left =[0, 0];
    let current_right=[2, 0];
    for(let y = 0; y < key.length; y++){
        for (let x = 0; x < key[y].length; x++){
            for(let i = 0; i < numbers.length; i++){
                if(key[y][x] == numbers[i]){
                    coordinate.push([x, y, i])
                }          
            }
        }
    }
    console.log(coordinate.sort((a,b) => a[2] - b[2]))
    coordinate.sort((a,b) => a[2] - b[2]).forEach((cor) => {
        if(cor[0] == 0){
            answer +='L'
            current_left = [cor[0], cor[1]]
        } else if (cor[0] == 2){
            answer +='R'
            current_right = [cor[0], cor[1]]
        } else if (cor[0] == 1){
            let move_left = Math.abs(cor[0] - current_left[0]) +  Math.abs(cor[1] - current_left[1])
            let move_right = Math.abs(cor[0] - current_right[0]) +  Math.abs(cor[1] - current_right[1])
            if(move_left > move_right){
                answer +='R'
                current_right = [cor[0], cor[1]]
            } else if (move_left < move_right) {
                answer += 'L'
                current_left = [cor[0], cor[1]]
            } else if (move_left == move_right){
                if(hand == 'right'){
                    answer +='R'
                    current_right = [cor[0], cor[1]]
                } else {
                    answer += 'L'
                    current_left = [cor[0], cor[1]]
                }
            }
            
        }
    })
    //coordinate 는 x, y 좌표, i= 누른 순서(index)
    return answer;
}
---------------------------------------------------------------
#37 다트 게임
function solution(dartResult) {
    var answer = [];
    let pow = [0, 'S', 'D', 'T']
    let re = /\d*\w[#*]*/g;
    let result_num= [];
    let result_option =[]
    let score = dartResult.match(re)
    result_num = score.map((num) => Number(num.match(/\d+/g)))
    result_option = score.map((option) => option.match(/[^0-9]/g))
    for(let i = 0 ; i < result_num.length; i++){
       answer.push(Math.pow(result_num[i], pow.indexOf(result_option[i][0])))
       if(result_option[i][1] == '*'){
           answer[i] *= 2;
           if(i >= 1 ){answer[i - 1] *= 2}
       } else if(result_option[i][1] == '#'){
           answer[i] *= -1
       }
    }
    return answer.reduce((a,b) => a+b,0)
}

---------------------------------------------------------------
#38 최댓값과 최솟값
function solution(s) {
    var answer = [];
    s = s.split(' ');
    console.log(s)
        answer = s.map((value) => Number(value)).sort((a,b) => a - b)
                .filter((value, index) => index == 0 || index == s.length -1).join(' ')

    return answer;
}
---------------------------------------------------------------
#39 숫자의 표현
function solution(n) {
    var answer = 0;
    let div = [];
    for(let i = 1; i <= n ; i++){
        if(n % i == 0){div.push(i)}
    }
    answer = div.filter((num) => num % 2 == 1).length
    return answer;
}
---------------------------------------------------------------
#40 

---------------------------------------------------------------
#25 약수의 개수와 덧셈

---------------------------------------------------------------

